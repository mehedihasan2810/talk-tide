generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// User model --------------------------------------------------------

model User {
  id                      String        @id @default(auto()) @map("_id") @db.ObjectId
  avatar                  Avatar?
  username                String        @unique
  email                   String        @unique
  password                String
  role                    UserRole      @default(USER)
  loginType               LoginType     @default(EMAIL_PASSWORD)
  isEmailVerified         Boolean       @default(false)
  refreshToken            String?
  forgotPasswordToken     String?
  forgotPasswordExpiry    DateTime?
  emailVerificationToken  String?
  emailVerificationExpiry DateTime?
  chatMessages            ChatMessage[]
  adminChats              Chat[]        @relation("AdminChat")
  chats                   Chat[]        @relation(fields: [chatIds], references: [id])
  chatIds                 String[]      @db.ObjectId
  createdAt               DateTime      @default(now())
  updatedAt               DateTime      @updatedAt

  @@map("users")
}

// ----------------------------------------------------------------------

// Chat model -----------------------------------------------------------

model Chat {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  name           String
  isGroupChat    Boolean       @default(false)
  chatMessages   ChatMessage[]
  participants   User[]        @relation(fields: [participantIds], references: [id])
  participantIds String[]      @db.ObjectId
  admin          User          @relation("AdminChat", fields: [adminId], references: [id])
  adminId        String        @db.ObjectId
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@map("chats")
}

// ------------------------------------------------------------------------

// ChatMessage model ------------------------------------------------------

model ChatMessage {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  sender      User          @relation(fields: [senderId], references: [id])
  senderId    String        @db.ObjectId
  content     String
  attachments Attachments[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  chat        Chat          @relation(fields: [chatId], references: [id])
  chatId      String        @db.ObjectId

  @@map("chatMessages")
}

// --------------------------------------------------------------------

// enum, composite type ------------------------------------------------

enum LoginType {
  EMAIL_PASSWORD
  GOOGLE
}

enum UserRole {
  USER
  ADMIN
}

type Avatar {
  url       String @default("https://via.placeholder.com/200x200.png")
  localPath String @default("")
}

type Attachments {
  url       String
  localPath String @default("")
}

// -----------------------------------------------------------------------
